/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
 */
package estruturas.pkgdo.sequenciais;

import java.util.Scanner;

/**
 *
 * @author Caio-Stalberg
 */
public class Conecta4 {

    /**
     * * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here     
        Scanner ler = new Scanner(System.in);
        int[][] tabuleiro = new int[6][7];
        int jogadorx, jogadoro;
        jogadorx = -1;
        jogadoro = 1;
        int jogadas = 0;
        int linhaJogada = 0;
        int colunaJogada = 0;

        while (jogadas < 42) {
            //------------solicita a jogada em linha e coluna--------------------  
            try {
                // System.out.println("digite a linha da sua jogada");

                System.out.println("digite a coluna da sua jogada");
                colunaJogada = converte(ler.nextInt());
                linhaJogada = linhaEmbaixo(tabuleiro, colunaJogada);

                if (tabuleiro[linhaJogada][colunaJogada] == -1 || tabuleiro[linhaJogada][colunaJogada] == 1) {
                    System.out.println("Esta casa já foi preenchida completamente, escolha outra coluna!...");
                } else {
                    //-------------------Contnua se a posição não estiver ocupada---------               
                    if (jogadas % 2 == 0) {
                        // se a jogada for impar preenche com X, senao com O       
                        tabuleiro[linhaJogada][colunaJogada] = jogadoro;
                    } else {
                        tabuleiro[linhaJogada][colunaJogada] = jogadorx;
                        
                    }
                    System.out.println();
                    //----------Impressão do campo--------------------------       
                    for (int linha = 0; linha < 6; linha++) {
                        for (int coluna = 0; coluna < 7; coluna++) {

                            if (tabuleiro[linha][coluna] == 1) {
                                System.out.print(" O ");
                            }

                            if (tabuleiro[linha][coluna] == -1) {
                                System.out.print(" X ");
                            }

                            if (tabuleiro[linha][coluna] == 0) {
                                System.out.print("   ");
                            }
                            if (coluna == 0 || coluna == 1 || coluna == 2 || coluna == 3 || coluna == 4 || coluna == 5 || coluna == 6) {
                                System.out.print("|");
                            }
                        }
                        System.out.println();
                    }
                    //-------------------Faz verificações----------------      
                    int ganhador = verificaResultado(tabuleiro);

                    if (ganhador == 1) {
                        System.out.println("o/ Jogador O é o vencedor o/ ");
                        jogadas = 42;
                    } else {
                        if (ganhador == -1) {
                            System.out.println("o/ Jogador X é o vencedor o/");
                            jogadas = 42;
                        } else {
                        }
                    }
                    jogadas++;
                    
                            
                }
            } catch (Exception e) {
                jogadas++;
                //System.out.println("valor inválido");
            }

        }
    }

    public static int converte(int a) {// deixar o programa mais amigavel, o usuario digita valores de 1 a 6 e não de 0 a 5      
        return a - 1;
    }

    public static int linhaEmbaixo(int[][] tabuleiro, int coluna) {// deixar o programa mais amigavel, o usuario digita valores de 1 a 6 e não de 0 a 5      
        int linha = 5;
        int i = 5;

        while (tabuleiro[i][coluna] != 0) {
            i--;
        }
        linha = i;
        return linha;
    }

    public static int verificaResultado(int[][] tabuleiro) {
        //Verifica a linha em 4 peças
        for (int linha = 0; linha < 6; linha++) {
            if ((tabuleiro[linha][0] + tabuleiro[linha][1] + tabuleiro[linha][2] + tabuleiro[linha][3] + tabuleiro[linha][4] + tabuleiro[linha][5]) == -4) {
                return -1;
            }
            if ((tabuleiro[linha][0] + tabuleiro[linha][1] + tabuleiro[linha][2] + tabuleiro[linha][3] + tabuleiro[linha][4] + tabuleiro[linha][5]) == 4) {
                return 1;
            }
        }
        for (int coluna = 0; coluna < 7; coluna++) {
            //verifica coluna em 4 peças
            if ((tabuleiro[0][coluna] + tabuleiro[1][coluna] + tabuleiro[2][coluna] + tabuleiro[3][coluna] + tabuleiro[4][coluna] + tabuleiro[5][coluna] + tabuleiro[6][coluna]) == -4) {
                return -1;
            }
            if ((tabuleiro[0][coluna] + tabuleiro[1][coluna] + tabuleiro[2][coluna] + tabuleiro[3][coluna] + tabuleiro[4][coluna] + tabuleiro[5][coluna] + tabuleiro[6][coluna]) == 4) {
                return 1;
            }
        }

        //verifica diagonal de 4 peças
        if ((tabuleiro[0][0] + tabuleiro[1][1] + tabuleiro[2][2] + tabuleiro[3][3] + tabuleiro[4][4] + tabuleiro[5][5]) == -4) {
            return -1;
        }
        if ((tabuleiro[0][0] + tabuleiro[1][1] + tabuleiro[2][2] + tabuleiro[3][3] + tabuleiro[4][4] + tabuleiro[5][5]) == 4) {
            return 1;
        }

        if ((tabuleiro[1][0] + tabuleiro[2][1] + tabuleiro[3][2] + tabuleiro[4][3] + tabuleiro[5][4]) == -4) {
            return -1;
        }
        if ((tabuleiro[1][0] + tabuleiro[2][1] + tabuleiro[3][2] + tabuleiro[4][3] + tabuleiro[5][4]) == 4) {
            return 1;
        }

        if ((tabuleiro[2][0] + tabuleiro[3][1] + tabuleiro[4][2] + tabuleiro[5][3]) == -4) {
            return -1;
        }
        if ((tabuleiro[2][0] + tabuleiro[3][1] + tabuleiro[4][4] + tabuleiro[5][3]) == 4) {
            return 1;
        }

        if ((tabuleiro[0][1] + tabuleiro[1][2] + tabuleiro[2][3] + tabuleiro[3][4] + tabuleiro[4][5] + tabuleiro[5][6]) == -4) {
            return -1;
        }
        if ((tabuleiro[0][1] + tabuleiro[1][2] + tabuleiro[2][3] + tabuleiro[3][4] + tabuleiro[4][5] + tabuleiro[5][6]) == 4) {
            return 1;
        }

        if ((tabuleiro[0][2] + tabuleiro[1][3] + tabuleiro[2][4] + tabuleiro[3][5] + tabuleiro[4][6]) == -4) {
            return -1;
        }
        if ((tabuleiro[0][2] + tabuleiro[1][3] + tabuleiro[2][4] + tabuleiro[3][5] + tabuleiro[4][6]) == 4) {
            return 1;
        }

        if ((tabuleiro[0][3] + tabuleiro[1][4] + tabuleiro[2][5] + tabuleiro[3][6]) == -4) {
            return -1;
        }
        if ((tabuleiro[0][3] + tabuleiro[1][4] + tabuleiro[2][5] + tabuleiro[3][6]) == 4) {
            return 1;
        }

        return 0;
    }
}
